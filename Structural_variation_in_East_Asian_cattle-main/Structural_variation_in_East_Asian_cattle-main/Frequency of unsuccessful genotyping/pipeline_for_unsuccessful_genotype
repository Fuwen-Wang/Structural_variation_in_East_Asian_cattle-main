#对用Paragraph软件产生的merge.vcf文件，统计四种基因型的分布
##In the merge.vcf file generated by Paragraph software, the distribution of four genotypes was counted.
python deal4caluvcfmissing.py merge.vcf.1 merge.vcf.statistic.csv

#根据分型结果merge.vcf.statistic.csv，对unsuccessful genotype的位点进行筛选，做成bed文件(merge.vcf.statistic.csv.G75.loc)。格式如下：
##According to the classification results of merge.vcf.statistic.csv, the unsuccessful genotype positions were extracted (merge.vcf.statistic.csv.G75.loc). The format is as follows:
MGchr01	209714
MGchr01	261550
MGchr01	263564
MGchr01	550685

#用vcftools软件将这些位点从vcf集合提出来，生成unsuccessful genotype的vcf集合
##vcftools software was used to extract these positions (merge.vcf.statistic.csv.G75.loc) from the merge.vcf and generate the merge.vcf.statistic.csv.G75.loc.vcf.
vcftools --vcf merge.vcf --positions merge.vcf.statistic.csv.G75.loc --recode --out merge.vcf.statistic.csv.G75.loc.vcf

#对merge.vcf.statistic.csv.G75.loc.vcf.recode.vcf文件进行格式处理
less merge.vcf.statistic.csv.G75.loc.vcf.recode.vcf | grep -v '^##' | perl -p -e 's/:(.*?)\t/\t/g' | perl -p -e 's/:(.*?)\n/\n/g' |perl -p -e 's/(.*?)\t(.*?)\t(.*?)\t(.*?)\t(.*?)\t(.*?)\t(.*?)\t(.*?)\t(.*?)\t(.*?)\t/$1:$2\t/'  |cut -f 1-10 > merge.vcf.statistic.csv.G75.loc.vcf.recode.vcf.1

#统计每个品种在每个位点的unsuccessful genotype的频率
##Statistics the unsuccessful genotype frequencies in each locus per breed.
#需要提供merge.vcf.statistic.csv.G75.loc.vcf.recode.vcf.1和sample.breed.txt作为输入文件。breed_sample.txt是品种\t样本名的格式。
##Need to provide the merge.vcf.statistic.csv.G75.loc.vcf.recode.vcf.1 and sample.breed.txt file as input. breed_sample.txt is the "breed\tsample" format.
python Freq_unsuccessful_genotype_breed.py
